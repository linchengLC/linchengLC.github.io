<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on lin&#39;s blog</title>
    <link>https://linchengLC.github.io/post/</link>
    <description>Recent content in Posts on lin&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 28 Nov 2019 12:11:17 +0800</lastBuildDate>
    
	<atom:link href="https://linchengLC.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>标准库Flag基本使用</title>
      <link>https://linchengLC.github.io/post/flag/</link>
      <pubDate>Thu, 28 Nov 2019 12:11:17 +0800</pubDate>
      
      <guid>https://linchengLC.github.io/post/flag/</guid>
      <description>Go语言内置的flag包实现了命令行参数的解析，flag包使得开发命令行工具更为简单。 os.Args 如果你只是简单的想要获取命令行参数，可以像下面的代码</description>
    </item>
    
    <item>
      <title>Goroutine管理</title>
      <link>https://linchengLC.github.io/post/goroutine%E7%AE%A1%E7%90%86/</link>
      <pubDate>Thu, 28 Nov 2019 03:11:17 +0800</pubDate>
      
      <guid>https://linchengLC.github.io/post/goroutine%E7%AE%A1%E7%90%86/</guid>
      <description>Groutine分组管理、sync、WaitGroup 一、sync.WaitGroup{}进行goroutine的控制 WaitGroup等待</description>
    </item>
    
    <item>
      <title>Mysql学习笔记</title>
      <link>https://linchengLC.github.io/post/mysql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 28 Nov 2019 03:11:17 +0800</pubDate>
      
      <guid>https://linchengLC.github.io/post/mysql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>常用mysql命令 安装： Linux 系统联网 sudo apt-get update sudo apt-get install mysql-server 启动： /etc/init.d/mysql start/stop/restart service mysql start/stop/restart 查看： mysql -V 查看版本 service mysql status 查看当前mysql服务器运行状态。 netstat -apn | grep mysql 查看当前</description>
    </item>
    
    <item>
      <title>Golang的Channel底层原理</title>
      <link>https://linchengLC.github.io/post/golang%E7%9A%84channel%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86/</link>
      <pubDate>Tue, 12 Nov 2019 15:11:17 +0800</pubDate>
      
      <guid>https://linchengLC.github.io/post/golang%E7%9A%84channel%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86/</guid>
      <description>channel的整体结构图 简单说明： buf是有缓冲的channel所特有的结构，用来存储缓存数据。是个循环链表 sendx和recvx用于记录</description>
    </item>
    
    <item>
      <title>为什么使用sync.pool</title>
      <link>https://linchengLC.github.io/post/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8sync.pool/</link>
      <pubDate>Sat, 26 Oct 2019 12:11:17 +0800</pubDate>
      
      <guid>https://linchengLC.github.io/post/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8sync.pool/</guid>
      <description>介绍 因为使用Pool后更快。通过文章底部存储库中的基准测试可以较少4982被的内存占用 相比之下，Pool的性能更快更好 ok，这究竟是怎么回事</description>
    </item>
    
    <item>
      <title>面试知识点</title>
      <link>https://linchengLC.github.io/post/%E9%9D%A2%E8%AF%95%E7%9F%A5%E8%AF%86%E7%82%B9/</link>
      <pubDate>Sat, 26 Oct 2019 12:11:17 +0800</pubDate>
      
      <guid>https://linchengLC.github.io/post/%E9%9D%A2%E8%AF%95%E7%9F%A5%E8%AF%86%E7%82%B9/</guid>
      <description>1. 前言 面试考察的知识点多而杂，要完全掌握需要花费大量的时间和精力。但是面试中经常被问到的知识点却没有多少，你完全可以用 20% 的时间去掌握 80% 常问的</description>
    </item>
    
    <item>
      <title>反转整数</title>
      <link>https://linchengLC.github.io/post/%E5%8F%8D%E8%BD%AC%E6%95%B4%E6%95%B0/</link>
      <pubDate>Fri, 18 Oct 2019 12:11:17 +0800</pubDate>
      
      <guid>https://linchengLC.github.io/post/%E5%8F%8D%E8%BD%AC%E6%95%B4%E6%95%B0/</guid>
      <description>给定一个 32 位有符号整数，将整数中的数字进行反转。 示例 1: 输入: 123 输出: 321 示例 2: 输入: -123 输出: -321 示例 3: 输入: 120 输出: 21 注意: 假设我们的环境只能存</description>
    </item>
    
    <item>
      <title>罗马数字转换为整数</title>
      <link>https://linchengLC.github.io/post/%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B4%E6%95%B0/</link>
      <pubDate>Fri, 18 Oct 2019 12:11:17 +0800</pubDate>
      
      <guid>https://linchengLC.github.io/post/%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B4%E6%95%B0/</guid>
      <description>罗马数字包含以下七种字符： I ， V ， X ， L ， C ， D 和 M 。 字符 数值 I 1 V 5 X 10 L 50 C 100 D 500 M 1000 例如， 罗马数字 2 写做 II ，即为两个并列的 1。12 写做</description>
    </item>
    
  </channel>
</rss>